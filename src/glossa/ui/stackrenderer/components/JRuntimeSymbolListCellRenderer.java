/*
 *  The MIT License
 * 
 *  Copyright 2010 Georgios Migdos <cyberpython@gmail.com>.
 * 
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 * 
 *  The above copyright notice and this permission notice shall be included in
 *  all copies or substantial portions of the Software.
 * 
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *  THE SOFTWARE.
 */

/*
 * JRuntimeSymbolListCellRenderer.java
 *
 * Created on Nov 6, 2010, 12:20:45 AM
 */

package glossa.ui.stackrenderer.components;

import glossa.interpreter.InterpreterUtils;
import glossa.interpreter.symboltable.symbols.RuntimeArray;
import glossa.interpreter.symboltable.symbols.RuntimeSimpleSymbol;
import glossa.messages.Messages;
import glossa.types.Type;
import java.awt.Component;
import java.awt.Dimension;
import javax.swing.ImageIcon;
import javax.swing.JList;
import javax.swing.ListCellRenderer;

/**
 *
 * @author Georgios Migdos <cyberpython@gmail.com>
 */
public class JRuntimeSymbolListCellRenderer extends javax.swing.JPanel implements ListCellRenderer{

    private ImageIcon arrayIcon;
    private ImageIcon placeHolder;
    int maxWidth;

    /** Creates new form JRuntimeSymbolListCellRenderer */
    public JRuntimeSymbolListCellRenderer() {
        this.arrayIcon = new ImageIcon(JRuntimeSymbolListCellRenderer.class.getResource("/glossa/ui/resources/images/array_icon.png"));
        this.placeHolder = new ImageIcon(JRuntimeSymbolListCellRenderer.class.getResource("/glossa/ui/resources/images/place_holder.png"));
        initComponents();
        maxWidth = 0;
    }

    public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
        this.jGradientPanel1.setSelected(isSelected);
        if(value instanceof RuntimeSimpleSymbol){
            RuntimeSimpleSymbol rss = (RuntimeSimpleSymbol) value;
            this.jLabel7.setIcon(placeHolder);
            this.jLabel3.setText("Τιμή:");
            this.jLabel4.setText(rss.getName());
            this.jLabel5.setText(rss.getType().toString());
            this.jLabel6.setText(InterpreterUtils.toPrintableString(rss.getValue()));
        }else if(value instanceof RuntimeArray){
            this.jLabel7.setIcon(arrayIcon);
            this.jLabel3.setText("Τιμές:");
            RuntimeArray arr = (RuntimeArray) value;
            this.jLabel4.setText(arr.getName());
            this.jLabel5.setText(Messages.CONSTS_STR_ARRAY+" "+Messages.typeOfToString(arr.getType()));
            this.jLabel6.setText("<Κάντε διπλό κλικ εδώ>");
        } else{
            this.jLabel7.setIcon(placeHolder);
            this.jLabel3.setText("Τιμή:");
            this.jLabel4.setText("");
            this.jLabel5.setText("");
            this.jLabel6.setText("");
        }
        this.setPreferredSize(new Dimension(list.getWidth(), this.getPreferredSize().height));
        return this;
    }
    
    



    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jGradientPanel1 = new glossa.ui.stackrenderer.components.JGradientPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/glossa/ui/resources/images/place_holder.png"))); // NOI18N

        jLabel1.setFont(jLabel1.getFont().deriveFont(jLabel1.getFont().getStyle() & ~java.awt.Font.BOLD, 10));
        jLabel1.setText("Όνομα:");

        jLabel2.setFont(jLabel2.getFont().deriveFont(jLabel2.getFont().getStyle() & ~java.awt.Font.BOLD, 10));
        jLabel2.setText("Τύπος:");

        jLabel3.setFont(jLabel3.getFont().deriveFont(jLabel3.getFont().getStyle() & ~java.awt.Font.BOLD, 10));
        jLabel3.setText("Τιμή:");

        jLabel4.setFont(jLabel4.getFont().deriveFont(jLabel4.getFont().getStyle() & ~java.awt.Font.BOLD, 10));
        jLabel4.setText("12345678");

        jLabel5.setFont(jLabel5.getFont().deriveFont(jLabel5.getFont().getStyle() & ~java.awt.Font.BOLD, 10));
        jLabel5.setText("12345678");

        jLabel6.setFont(jLabel6.getFont().deriveFont(jLabel6.getFont().getStyle() & ~java.awt.Font.BOLD, 10));
        jLabel6.setText("12345678");

        javax.swing.GroupLayout jGradientPanel1Layout = new javax.swing.GroupLayout(jGradientPanel1);
        jGradientPanel1.setLayout(jGradientPanel1Layout);
        jGradientPanel1Layout.setHorizontalGroup(
            jGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jGradientPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jGradientPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4))
                    .addGroup(jGradientPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5))
                    .addGroup(jGradientPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jGradientPanel1Layout.setVerticalGroup(
            jGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jGradientPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jGradientPanel1Layout.createSequentialGroup()
                        .addGroup(jGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6))))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        add(jGradientPanel1);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private glossa.ui.stackrenderer.components.JGradientPanel jGradientPanel1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    // End of variables declaration//GEN-END:variables

}
